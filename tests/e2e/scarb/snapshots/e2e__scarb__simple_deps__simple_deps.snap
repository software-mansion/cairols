---
source: tests/e2e/scarb/simple_deps.rs
description: "// → a/Scarb.toml\n[package]\nname = \"a\"\nversion = \"0.1.0\"\nedition = \"2024_07\"\n\n[dependencies]\nb = { path = \"../b\" }\n\n// → a/src/lib.cairo\nuse b::Foo;\n\nfn main() {\n    let foo = Foo::Bar;\n    match foo {\n        Foo::Baz => {},\n        _ => {}\n    }\n}\n\n// → b/Scarb.toml\n[package]\nname = \"b\"\nversion = \"0.1.0\"\nedition = \"2024_07\"\n\n// → b/src/lib.cairo\npub enum Foo {\n    Bar,\n    Baz,\n}\n\nmod non_existent;"
expression: "normalize(&ls, analyzed_crates)"
---
# Analyzed Crates

- `a`: `["[ROOT]/a/src/lib.cairo"]`
    ```rust
    CrateSettings {
        name: Some(
            "a",
        ),
        edition: V2024_07,
        version: Some(
            Version {
                major: 0,
                minor: 1,
                patch: 0,
            },
        ),
        cfg_set: Some(
            CfgSet(
                target: "lib",
                target: "test",
                test,
            ),
        ),
        dependencies: {
            "a": DependencySettings {
                discriminator: Some(
                    "a 0.1.0 (path+[ROOT_URL]a/Scarb.toml)",
                ),
            },
            "b": DependencySettings {
                discriminator: Some(
                    "b 0.1.0 (path+[ROOT_URL]b/Scarb.toml)",
                ),
            },
            "core": DependencySettings {
                discriminator: None,
            },
        },
        experimental_features: ExperimentalFeaturesConfig {
            negative_impls: false,
            associated_item_constraints: false,
            coupons: false,
        },
    },
    Plugins {
        builtin: [],
    }
    ```
- `b`: `["[ROOT]/b/src/lib.cairo"]`
    ```rust
    CrateSettings {
        name: Some(
            "b",
        ),
        edition: V2024_07,
        version: Some(
            Version {
                major: 0,
                minor: 1,
                patch: 0,
            },
        ),
        cfg_set: Some(
            CfgSet(
                target: "lib",
                target: "test",
            ),
        ),
        dependencies: {
            "b": DependencySettings {
                discriminator: Some(
                    "b 0.1.0 (path+[ROOT_URL]b/Scarb.toml)",
                ),
            },
            "core": DependencySettings {
                discriminator: None,
            },
        },
        experimental_features: ExperimentalFeaturesConfig {
            negative_impls: false,
            associated_item_constraints: false,
            coupons: false,
        },
    },
    Plugins {
        builtin: [],
    }
    ```
- `core`: `["[SCARB_REGISTRY_STD]/core/src/lib.cairo"]`
    ```rust
    CrateSettings {
        name: Some(
            "core",
        ),
        edition: V2024_07,
        version: Some(
            Version {
                major: 2,
                minor: 11,
                patch: 2,
            },
        ),
        cfg_set: Some(
            CfgSet(
                target: "lib",
                target: "test",
            ),
        ),
        dependencies: {
            "core": DependencySettings {
                discriminator: None,
            },
        },
        experimental_features: ExperimentalFeaturesConfig {
            negative_impls: true,
            associated_item_constraints: true,
            coupons: true,
        },
    },
    Plugins {
        builtin: [
            CairoTest,
            Starknet,
        ],
    }
    ```
