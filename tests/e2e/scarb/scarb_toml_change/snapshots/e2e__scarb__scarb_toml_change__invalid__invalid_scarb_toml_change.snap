---
source: tests/e2e/scarb/scarb_toml_change/invalid.rs
description: "// → Scarb.toml\n[package]\nname = \"a\"\nversion = \"0.1.0\"\nedition = \"2024_07\"\n\n// → src/lib.cairo\n"
expression: "toml!\n{\n    analyzed_crates = analyzed_crates analyzed_crates_after_failed_metadata =\n    analyzed_crates_after_failed_metadata\n}"
---
analyzed_crates = '''
# Analyzed Crates

- `a`: `["[ROOT]/src/lib.cairo"]`
    ```rust
    CrateSettings {
        name: Some(
            "a",
        ),
        edition: V2024_07,
        version: Some(
            Version {
                major: 0,
                minor: 1,
                patch: 0,
            },
        ),
        cfg_set: Some(
            CfgSet(
                target: "lib",
                target: "test",
                test,
            ),
        ),
        dependencies: {
            "a": DependencySettings {
                discriminator: Some(
                    "a 0.1.0 (path+[ROOT_URL]Scarb.toml)",
                ),
            },
            "core": DependencySettings {
                discriminator: None,
            },
        },
        experimental_features: ExperimentalFeaturesConfig {
            negative_impls: false,
            associated_item_constraints: false,
            coupons: false,
        },
    },
    Plugins {
        builtin: [],
    }
    ```
- `core`: `["[SCARB_REGISTRY_STD]/core/src/lib.cairo"]`
    ```rust
    CrateSettings {
        name: Some(
            "core",
        ),
        edition: V2024_07,
        version: Some(
            Version {
                major: 2,
                minor: 11,
                patch: 2,
            },
        ),
        cfg_set: Some(
            CfgSet(
                target: "lib",
                target: "test",
            ),
        ),
        dependencies: {
            "core": DependencySettings {
                discriminator: None,
            },
        },
        experimental_features: ExperimentalFeaturesConfig {
            negative_impls: true,
            associated_item_constraints: true,
            coupons: true,
        },
    },
    Plugins {
        builtin: [
            CairoTest,
            Starknet,
        ],
    }
    ```
'''
analyzed_crates_after_failed_metadata = '''
# Analyzed Crates

- `core`: `["[SCARB_REGISTRY_STD]/core/src/lib.cairo"]`
    ```rust
    CrateSettings {
        name: None,
        edition: V2024_07,
        version: Some(
            Version {
                major: 2,
                minor: 11,
                patch: 2,
            },
        ),
        cfg_set: None,
        dependencies: {},
        experimental_features: ExperimentalFeaturesConfig {
            negative_impls: true,
            associated_item_constraints: true,
            coupons: true,
        },
    },
    Plugins {
        builtin: [
            CairoTest,
            Starknet,
        ],
    }
    ```
'''
