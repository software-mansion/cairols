---
source: tests/e2e/macros/procedural/custom/mod.rs
description: "// → workspace/Scarb.toml\n[workspace]\nmembers = [\"package_a\", \"package_b\"]\n\n[workspace.dependencies]\npackage_a = { path = \"./package_a\" }\npackage_b = { path = \"./package_b\" }\nanother_test_macros = { path = \"./another_test_macros\" }\ncairols_test_macros = { path = \"/scarb_procedural_macros\" }\n\n// → workspace/another_test_macros/Cargo.toml\n[package]\nname = \"another_test_macros\"\nversion = \"1.0.0\"\nedition = \"2024\"\n\n[lib]\ncrate-type = [\"rlib\", \"cdylib\"]\n\n[dependencies]\ncairo-lang-macro = \"0.1.1\"\n\n// → workspace/another_test_macros/Scarb.toml\n[package]\nname = \"another_test_macros\"\nversion = \"1.0.0\"\nedition = \"2024_07\"\n\n[cairo-plugin]\n\n// → workspace/another_test_macros/src/lib.rs\nuse cairo_lang_macro::{ProcMacroResult, TokenStream, inline_macro};\n\n#[inline_macro]\npub fn which_macro_package(item: TokenStream) -> ProcMacroResult {\n    let result = String::from(\"'another_test_macros'\");\n    ProcMacroResult::new(TokenStream::new(result))\n}\n\n// → workspace/package_a/Scarb.toml\n[package]\nname = \"package_a\"\nversion = \"0.1.0\"\nedition = \"2024_07\"\n\n[dependencies]\npackage_b.workspace = true\ncairols_test_macros.workspace = true\n\n// → workspace/package_a/src/lib.cairo\nfn foo() {\n    let _name = which_macro_package!();\n}\n\n// → workspace/package_b/Scarb.toml\n[package]\nname = \"package_b\"\nversion = \"0.1.0\"\nedition = \"2024_07\"\n\n[dependencies]\nanother_test_macros.workspace = true\n\n// → workspace/package_b/src/lib.cairo\nfn foo() {\n    let _name = which_macro_package!();\n}"
expression: report
---
[[expansions]]
analyzed_lines = """
    let _name = which_<caret>macro_package!();
"""
generated_code = """
// lib.cairo
// ---------

'cairols_test_macros'
"""

[[expansions]]
analyzed_lines = """
    let _name = which_<caret>macro_package!();
"""
generated_code = """
// lib.cairo
// ---------

'another_test_macros'
"""
