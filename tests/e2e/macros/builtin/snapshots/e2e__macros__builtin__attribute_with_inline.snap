---
source: tests/e2e/macros/builtin/mod.rs
description: "// → test_package/cairo_project.toml\n[crate_roots]\ntest_package = \"src\"\n\n[config.global]\nedition = \"2024_07\"\n\n// → test_package/src/lib.cairo\n#[derive(Drop)]\nstruct A {\n    a: felt252\n}\n\n#[generate_trait]\nimpl ImplA of ATrait {\n    fn c(self: A) {\n        println!(\"a\");\n        self.a + 1;\n    }\n}"
expression: report
---
[[expansions]]
analyzed_lines = '''
#[genera<caret>te_trait]
impl ImplA of A<caret>Trait {
        println!("a");<caret>
'''
generated_code = """
// generate_trait
// --------------

trait ATrait {
    fn c(self: A);
}

// lib.cairo
// ---------

#[generate_trait]
impl ImplA of ATrait {
    fn c(self: A) {
        {
            let mut __formatter_for_print_macros__: core::fmt::Formatter =
                core::traits::Default::default();
            core::result::ResultTrait::<
                (), core::fmt::Error,
            >::unwrap(
                {
                    core::byte_array::ByteArrayTrait::append_word(
                        ref __formatter_for_print_macros__.buffer, 0x610a, 2,
                    );
                    core::result::Result::<(), core::fmt::Error>::Ok(())
                },
            );
            core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
        }
        self.a + 1;
    }
}
"""

[[expansions]]
analyzed_lines = '''
        print<caret>ln!("a");
'''
generated_code = """
// lib.cairo
// ---------

{
    let mut __formatter_for_print_macros__: core::fmt::Formatter = core::traits::Default::default();
    core::result::ResultTrait::<
        (), core::fmt::Error,
    >::unwrap(
        {
            core::byte_array::ByteArrayTrait::append_word(
                ref __formatter_for_print_macros__.buffer, 0x610a, 2,
            );
            core::result::Result::<(), core::fmt::Error>::Ok(())
        },
    );
    core::debug::print_byte_array_as_string(@__formatter_for_print_macros__.buffer);
}
"""
