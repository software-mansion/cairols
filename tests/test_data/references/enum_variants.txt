//! > Test references of enum variants.

//! > test_runner_name
test_references(include_declaration: false)

//! > cairo_code
enum Foo {
    Bar,
    Baz,
}

fn main() {
    let foo = Foo::Ba<caret>r;
    match foo {
        Foo::Bar => {} // FIXME(#164): This should work.
        _ => {}
    }
}

//! > References #0
    let foo = Foo::Ba<caret>r;
---

//! > ==========================================================================

//! > Test references of enum variants including declaration.

//! > test_runner_name
test_references(include_declaration: true)

//! > cairo_code
enum Foo {
    Bar,
    Baz,
}

fn main() {
    let foo = Foo::Ba<caret>r;
    match foo {
        Foo::Bar => {} // FIXME(#164): This should work.
        _ => {}
    }
}

//! > References #0
    let foo = Foo::Ba<caret>r;
---
    <sel>Bar</sel>,
