//! > Test goto definition on variables.

//! > test_runner_name
test_goto_definition

//! > cairo_code
fn main() {
    let abc: felt252 = 0; // good
    let _ = ab<caret>c * 2;
}

fn foo() {
    let abc: felt252 = 1;  // bad
}

//! > Goto definition #0
    let _ = ab<caret>c * 2;
---
    let <sel>abc</sel>: felt252 = 0; // good

//! > ==========================================================================

//! > Test goto definition on function parameters.

//! > test_runner_name
test_goto_definition

//! > cairo_code
fn main(abc: felt252, def: felt252) {
    let _ = ab<caret>c * 2;
}

fn foo(abc: felt252) {}

//! > Goto definition #0
    let _ = ab<caret>c * 2;
---
fn main(<sel>abc: felt252</sel>, def: felt252) {

//! > ==========================================================================

//! > Test goto definition on closure parameters.

//! > test_runner_name
test_goto_definition

//! > cairo_code
fn foo(a: felt252) -> felt252 {
    let abc: felt252 = 0; // bad
    let c = |abc| { // good
        ab<caret>c + 3
    };
}

fn foo(abc: felt252) {}

//! > Goto definition #0
        ab<caret>c + 3
---
    let c = |<sel>abc</sel>| { // good
